FROM py-cmake-boost 

# set no user input, so deconf will not ask question while install
ARG DEBIAN_FRONTEND=noninteractive


# FIXME: use ARG instead of ENV once DockerHub supports this
# https://github.com/docker/hub-feedback/issues/460
ARG CLONE_TAG=1.0

ENV CAFFE_ROOT=/opt/caffe
WORKDIR $CAFFE_ROOT

RUN apt-get update && apt-get install -y -qq --no-install-recommends \
        libatlas-base-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        libhdf5-serial-dev \
        libleveldb-dev \
        liblmdb-dev \
        libopencv-dev \
        libprotobuf-dev \
        libsnappy-dev \
        protobuf-compiler \
	doxygen \
        && rm -rf /var/lib/apt/lists/*



RUN pip install  --no-cache-dir --upgrade pip \
# Note: instead of using requirements from the caffe repo, I overrided it
    && pip install --no-cache-dir Cython numpy scipy scikit-image matplotlib ipython h5py leveldb networkx nose pandas python-dateutil protobuf python-gflags pyyaml Pillow six
#    && cd python \
#    && for req in $(cat requirements.txt) pydot; do pip install --no-cache-dir $req; done \
#    && cd ..


RUN git clone --branch ${CLONE_TAG} --depth 1 https://github.com/BVLC/caffe.git .

RUN git clone --depth 1 https://github.com/NVIDIA/nccl.git \
    && cd nccl \
    && make -j install \
    && cd .. \
    && rm -rf nccl

RUN mkdir build \
    && cd build \
    && cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 -DCUDA_ARCH_NAME=Pascal .. \
    && make -j"$(nproc)"

 
ENV PYCAFFE_ROOT $CAFFE_ROOT/python
ENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH
ENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
RUN echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig

USER jac

